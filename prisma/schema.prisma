// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client"
  output   = "../dist/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String   @id @default(uuid())
  name        String   @unique
  price       Int
  isVisible   Boolean  @default(true) @map("is_visible")
  categoryId  String?  @map("category_id") 
  category    Category? @relation(fields: [categoryId], references: [id])
  
  productPromotions ProductPromotion[]

  @@map("products")
}

model Promotion {
  id String @id @default(uuid())
  description String
  promotionPrice Int? @map("promotion_price")
  promotionPercentage Int? @map("promotion_percentage")
  validDays String[] @map("valid_days")
  validHourStart Int[] @map("valid_hours_start")
  validHourEnd Int[] @map("valid_hours_end")
  validUntil DateTime? @map("valid_until")
  isExpired Boolean @default(false) @map("is_expired")
  
  productPromotions ProductPromotion[]

  @@map("promotions")
}

model ProductPromotion {
  id String @id @default(uuid())
  productId String @map("product_id")
  promotionId String @map("promotion_id")
  isActive Boolean @default(true) @map("is_active")

  product Product @relation(fields: [productId], references: [id])
  promotion Promotion @relation(fields: [promotionId], references: [id])

  @@unique([productId, promotionId])
  @@map("product_promotions")
}


model Category {
  id String @id @default(uuid())
  category String @unique

  Product Product[]

  @@map("categories")
}